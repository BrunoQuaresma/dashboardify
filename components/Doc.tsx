import {
  VStack,
  Heading,
  Box,
  Code,
  Text,
  BoxProps,
  Link,
  Table,
  Thead,
  Td,
  Th,
  Tr,
  Tbody,
} from "@chakra-ui/react";
import React from "react";
import NextLink from "next/link";
import { SITE_URL } from "../constants";

export const Doc = (props: BoxProps) => {
  return (
    <VStack spacing={6} fontSize={["md", "lg"]} alignItems="start" {...props}>
      <Heading as="h3" fontWeight="medium">
        Creating a dashboard using JSON
      </Heading>

      <Text>
        Dashboardify lets you create dashboards using a JSON you provide via a
        URL. This JSON needs to be formatted in a specific way as shown below:
      </Text>

      <Box as="pre" w="full">
        <Code w="full" p={4} overflow="auto" h="lg">{`{
  "sections": [
    {
      "title": "Users",
      "chart": {
        "label": "Last 7 days sign ups",
        "type": "line",
        "lines": [
          {
            "id": "Sign ups",
            "color": "#00B5D8",
            "data": [
              {
                "y": 230,
                "x": "14-02"
              },
              {
                "y": 450,
                "x": "15-02"
              },
              {
                "y": 874,
                "x": "16-02"
              },
              {
                "y": 310,
                "x": "17-02"
              },
              {
                "y": 240,
                "x": "18-02"
              },
              {
                "y": 150,
                "x": "19-02"
              },
              {
                "y": 675,
                "x": "20-02"
              }
            ]
          }
        ]
      },
      "stats": [
        {
          "label": "Total",
          "value": 1540
        },
        {
          "label": "Today",
          "value": 20
        },
        {
          "label": "Pro Users",
          "value": 125
        }
      ]
    },
    {
      "title": "Revenue",
      "stats": [
        {
          "label": "Total",
          "value": 8654,
          "prefix": "$"
        },
        {
          "label": "This month",
          "value": 804.5,
          "prefix": "$"
        },
        {
          "label": "MRR",
          "value": 968.43,
          "prefix": "$"
        }
      ]
    },
    {
      "title": "Requests",
      "table": {
        "columns": [
          "User",
          "Number of requests"
        ],
        "data": [
          [
            "bruno@hotmail.com",
            3450
          ],
          [
            "joao@hotmail.com",
            2789
          ],
          [
            "neto@hotmail.com",
            2379
          ],
          [
            "pedro@hotmail.com",
            1045
          ],
          [
            "jr@hotmail.com",
            875
          ],
          [
            "beto@hotmail.com",
            294
          ]
        ]
      }
    }
  ]
}`}</Code>
      </Box>

      <Text>
        As you can see, the dashboard is made up of sections that can have
        stats, table and a chart. To see the dashboard generated by this
        example, you can go to the{" "}
        <NextLink passHref href={`/dashboard?url=${SITE_URL}/api/example`}>
          <Link target="_blank">dashboard page</Link>
        </NextLink>
        .
      </Text>

      <Heading as="h4" fontWeight="medium" fontSize="2xl">
        Schema
      </Heading>

      <Text>
        To start the schema, you must define the sections you want to show.
      </Text>

      <Box borderWidth={1} w="full">
        <Table fontSize="sm">
          <Thead>
            <Tr>
              <Th>Attribute</Th>
              <Th>Type</Th>
              <Th>Required</Th>
            </Tr>
          </Thead>

          <Tbody>
            <Tr>
              <Td>sections</Td>
              <Td>
                Array of{" "}
                <NextLink passHref href="#section">
                  Section
                </NextLink>
              </Td>
              <Td>Yes</Td>
            </Tr>
          </Tbody>
        </Table>
      </Box>

      <Heading as="h4" fontWeight="medium" fontSize="2xl" id="section">
        Section
      </Heading>

      <Text>
        Sections are how Dashboardify groups information. You can have
        everything in the same section or create different ones for each
        context, like &quot;Users&quot;, &quot;Recipe&quot;,
        &quot;Requests&quot;, etc.
      </Text>

      <Box borderWidth={1} w="full">
        <Table fontSize="sm">
          <Thead>
            <Tr>
              <Th>Attribute</Th>
              <Th>Type</Th>
              <Th>Required</Th>
            </Tr>
          </Thead>

          <Tbody>
            <Tr>
              <Td>title</Td>
              <Td>String</Td>
              <Td>Yes</Td>
            </Tr>
            <Tr>
              <Td>stats</Td>
              <Td>
                Array of{" "}
                <NextLink passHref href="#stat">
                  Stats
                </NextLink>
              </Td>
              <Td>No</Td>
            </Tr>
            <Tr>
              <Td>table</Td>
              <Td>
                <NextLink passHref href="#table">
                  Table
                </NextLink>
              </Td>
              <Td>No</Td>
            </Tr>
            <Tr>
              <Td>chart</Td>
              <Td>
                <NextLink passHref href="#chart">
                  Chart
                </NextLink>
              </Td>
              <Td>No</Td>
            </Tr>
          </Tbody>
        </Table>
      </Box>

      <Heading as="h4" fontWeight="medium" fontSize="2xl" id="stat">
        Stat
      </Heading>

      <Text>
        A stat is used to display numbers as metrics and monetary values.
      </Text>

      <Box borderWidth={1} w="full">
        <Table fontSize="sm">
          <Thead>
            <Tr>
              <Th>Attribute</Th>
              <Th>Type</Th>
              <Th>Required</Th>
            </Tr>
          </Thead>

          <Tbody>
            <Tr>
              <Td>label</Td>
              <Td>String</Td>
              <Td>Yes</Td>
            </Tr>
            <Tr>
              <Td>value</Td>
              <Td>Number</Td>
              <Td>Yes</Td>
            </Tr>
            <Tr>
              <Td>prefix</Td>
              <Td>String</Td>
              <Td>No</Td>
            </Tr>
          </Tbody>
        </Table>
      </Box>

      <Heading as="h4" fontWeight="medium" fontSize="2xl" id="table">
        Table
      </Heading>

      <Text>
        A table is used to display tabular data. It&apos;s useful when you have
        a list of values you want to see at once.
      </Text>

      <Box borderWidth={1} w="full">
        <Table fontSize="sm">
          <Thead>
            <Tr>
              <Th>Attribute</Th>
              <Th>Type</Th>
              <Th>Required</Th>
            </Tr>
          </Thead>

          <Tbody>
            <Tr>
              <Td>columns</Td>
              <Td>Array of String</Td>
              <Td>Yes</Td>
            </Tr>
            <Tr>
              <Td>data</Td>
              <Td>Array of Array of String or Number</Td>
              <Td>Yes</Td>
            </Tr>
          </Tbody>
        </Table>
      </Box>

      <Heading as="h4" fontWeight="medium" fontSize="2xl" id="chart">
        Chart
      </Heading>

      <Text>Display a line chart with x and y defined values.</Text>

      <Box borderWidth={1} w="full">
        <Table fontSize="sm">
          <Thead>
            <Tr>
              <Th>Attribute</Th>
              <Th>Type</Th>
              <Th>Required</Th>
            </Tr>
          </Thead>

          <Tbody>
            <Tr>
              <Td>label</Td>
              <Td>String</Td>
              <Td>Yes</Td>
            </Tr>
            <Tr>
              <Td>type</Td>
              <Td>&ldquo;linear&ldquo;</Td>
              <Td>Yes</Td>
            </Tr>
            <Tr>
              <Td>lines</Td>
              <Td>
                Array of{" "}
                <NextLink passHref href="#chart-line">
                  Line
                </NextLink>
              </Td>
              <Td>Yes</Td>
            </Tr>
          </Tbody>
        </Table>
      </Box>

      <Heading as="h6" fontWeight="medium" fontSize="xl" id="chart-line">
        Chart line
      </Heading>

      <Box borderWidth={1} w="full">
        <Table fontSize="sm">
          <Thead>
            <Tr>
              <Th>Attribute</Th>
              <Th>Type</Th>
              <Th>Required</Th>
            </Tr>
          </Thead>

          <Tbody>
            <Tr>
              <Td>id</Td>
              <Td>String</Td>
              <Td>Yes</Td>
            </Tr>
            <Tr>
              <Td>color</Td>
              <Td>String</Td>
              <Td>Yes</Td>
            </Tr>
            <Tr>
              <Td>data</Td>
              <Td>
                Array of <NextLink href="#chart-values">Values</NextLink>
              </Td>
              <Td>Yes</Td>
            </Tr>
          </Tbody>
        </Table>
      </Box>

      <Heading as="h6" fontWeight="medium" fontSize="xl" id="chart-values">
        Chart values
      </Heading>

      <Box borderWidth={1} w="full">
        <Table fontSize="sm">
          <Thead>
            <Tr>
              <Th>Attribute</Th>
              <Th>Type</Th>
              <Th>Required</Th>
            </Tr>
          </Thead>

          <Tbody>
            <Tr>
              <Td>x</Td>
              <Td>String</Td>
              <Td>Yes</Td>
            </Tr>
            <Tr>
              <Td>y</Td>
              <Td>Number</Td>
              <Td>Yes</Td>
            </Tr>
          </Tbody>
        </Table>
      </Box>
    </VStack>
  );
};
